<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP/4AAB/+AAA//wAAP/8AAH//gH//w==
</value>
  </data>
  <metadata name="sockets.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>500, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP/4AAB/+AAA//wAAP/8AAH//gH//w==
</value>
  </data>
</root>